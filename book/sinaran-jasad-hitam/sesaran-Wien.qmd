# Hukum Sesaran Wien

<!-- TODO Hukum Sesaran Wien -->
:::::{.callout-note appearance="minimal"}
##
::::{#thm-sesaran-wien}
## Hukum Sesaran Wien
Panjang gelombang puncak sinaran jasad hitam, $\lambda_p$, adalah berkadaran songsang dengan suhu bintang tersebut, $T$:
$$
    \lambda_p = \frac{W}{T}
$$

:::{.callout-tip collapse=true}
## dengan maksud bahawa...

| simbol | maksud | nilai |
| :---: | :--- | :--- |
| $\lambda_p$ | panjang gelombang puncak | pembolehubah bersandar $T$ |
| $W$ | pemalar Wien | $2.8978\times 10^{âˆ’3} \text{m}\cdot\text{K}$ |
| $T$ | suhu bintang | pembolehubah tak bersandar |

:::
::::
:::::

```{python}
#| echo: false
#| fig-align: center
#| freeze: true
 
import numpy as np
import matplotlib.pyplot as plt

min_wavelength: float = 0.000_000_2
max_wavelength: float = 0.000_004
_step: int = 250

wavelength: np.ndarray = np.arange(min_wavelength, max_wavelength, step=0.2e-7)
temperature: float = 3_000 # initial temperature
temperatures: np.ndarray = np.arange(100, 7_000, step=100)

def Planck(wavelength: np.ndarray, temperature: float, h: float = 6.62e-34, boltzmann: float = 1.38e-23, speed_of_light: float = 3e8) -> np.ndarray:
    wavelength_five: np.ndarray = wavelength**5
    exponent_component: np.ndarray = wavelength*temperature*boltzmann
    exponent_minus_one: np.ndarray = np.exp(h*speed_of_light/exponent_component) - 1
    return (8*np.pi*h*speed_of_light/wavelength_five) * (1/exponent_minus_one)


def sesaran_Wien(temperature: np.ndarray, constant: float = 2.8978e-3) -> np.ndarray:
    return constant / temperature

sesaran = sesaran_Wien(temperatures)
y_wien: np.ndarray = Planck(sesaran, temperatures)

plt.plot(sesaran, y_wien, label='puncak lengkung', linestyle='dotted')
def plot_planck(temperature: int):
    planck = Planck(wavelength, temperature)
    plt.plot(wavelength, planck, label=f'suhu = {temperature} K')

for temp in [temperature, temperature + _step, temperature + _step*2, temperature + _step*3, temperature + _step*4][::-1]:
    plot_planck(temp)

plt.title('Hukum Sesaran Wien dibandingkan dengan Hukum Planck')
plt.xlabel('panjang gelombang')
plt.ylabel('keamatan')
plt.ylim(0, 200_000)
plt.xlim(0, 0.25e-5)
plt.legend()
plt.show()
```


## Kaitannya Dengan Hukum Planck

:::{.proof}
:::